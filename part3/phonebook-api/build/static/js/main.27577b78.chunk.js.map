{"version":3,"sources":["components/filter/filter.component.jsx","components/person-form/person-form.component.jsx","services/phonebook.js","components/people/people.component.jsx","components/notification/notification.component.jsx","index.js"],"names":["Filter","personFilter","handleFilterChange","value","onChange","PersonForm","addPerson","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","type","baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","People","setPeople","people","filter","person","name","includes","map","key","number","onClick","window","confirm","phonebookService","item","Notification","message","className","ReactDOM","render","useState","setNewName","setNewNumber","setPersonFilter","errorMessage","setErrorMessage","successMessage","setSuccessMessage","useEffect","initialPeople","event","target","preventDefault","exists","length","personToChange","find","n","changedPerson","returnedPerson","catch","error","setTimeout","concat","document","getElementById"],"mappings":"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","file":"static/js/main.27577b78.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({ personFilter, handleFilterChange }) => (\n    <div>\n        filter shown with: <input value={personFilter} onChange={handleFilterChange} />\n    </div>\n)\n\nexport default Filter","import React from 'react'\n\nconst PersonForm = ({ addPerson, newName, handleNameChange, newNumber, handleNumberChange }) => (\n    <form onSubmit={addPerson}>\n        <div>\n            name: <input value={newName} onChange={handleNameChange} />\n        </div>\n        <div>\n            number: <input value={newNumber} onChange={handleNumberChange} />\n        </div>\n        <div>\n            <button type=\"submit\">add</button>\n        </div>\n    </form>\n)\n\nexport default PersonForm","import axios from 'axios'\nconst baseUrl = '/api/people'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => {\n        return response.data\n    })\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nconst deletePerson = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, deletePerson }","import React from 'react'\nimport phonebookService from '../../services/phonebook'\n\nconst People = ({ setPeople, people, personFilter }) => {\n    const peopleToShow = people.filter(person => (\n        person.name.includes(personFilter)\n    ))\n\n    const rows = () => peopleToShow.map(person =>\n        <div key={person.id}>\n            <p>{person.name} {person.number}</p>\n            <button onClick={() => {\n                if (window.confirm(`delete ${person.name}?`)) {\n                    phonebookService\n                        .deletePerson(person.id)\n                        .then(response => {\n                            setPeople(people.filter(item => item.id !== person.id))\n                        })\n                }\n            }}>delete</button>\n        </div>\n    )\n    return (\n        rows()\n    )\n}\n\nexport default People","import React from 'react'\nimport './notification.styles.css'\n\nconst Notification = ({ message, type }) => {\n    if (message === null) {\n        return null\n    }\n\n\n    if (type === 'success') {\n        return (\n            <div className=\"success\">\n                {message}\n            </div>\n        )\n    } else if (type === 'error') {\n        return (\n            <div className=\"error\">\n                {message}\n            </div>\n        )\n    }\n}\n\nexport default Notification","import React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport Filter from './components/filter/filter.component';\nimport PersonForm from './components/person-form/person-form.component';\nimport People from './components/people/people.component';\nimport Notification from './components/notification/notification.component'\n\nimport phonebookService from './services/phonebook'\n\nconst App = () => {\n    const [people, setPeople] = useState([])\n    const [newName, setNewName] = useState('')\n    const [newNumber, setNewNumber] = useState('')\n    const [personFilter, setPersonFilter] = useState('')\n    const [errorMessage, setErrorMessage] = useState(null)\n    const [successMessage, setSuccessMessage] = useState(null)\n\n\n    useEffect(() => {\n        phonebookService\n            .getAll()\n            .then(initialPeople => {\n                setPeople(initialPeople)\n            })\n    }, [])\n\n\n    const handleNameChange = (event) => {\n        setNewName(event.target.value)\n    }\n\n    const handleNumberChange = (event) => {\n        setNewNumber(event.target.value)\n    }\n\n    const handleFilterChange = (event) => {\n        setPersonFilter(event.target.value)\n    }\n    const addPerson = (event) => {\n        event.preventDefault()\n        let exists = people.filter(person => person.name === newName)\n\n        if (exists.length > 0) {\n            if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n                const personToChange = people.find(n => n.id === exists[0].id)\n                const changedPerson = { ...personToChange, number: newNumber }\n                phonebookService\n                    .update(personToChange.id, changedPerson)\n                    .then(returnedPerson => {\n                        setPeople(people.map(person => person.id !== personToChange.id ? person : returnedPerson))\n                        setNewName('')\n                        setNewNumber('')\n                    })\n                    .catch(error => {\n                        setErrorMessage(\n                            `${newName} already changed`\n                        )\n                        setTimeout(() => {\n                            setErrorMessage(null)\n                        }, 5000)\n                        setPeople(people.filter(n => n.id !== personToChange.id))\n                    })\n\n            }\n            setNewName('')\n            setNewNumber('')\n        }\n        else {\n            const personObject = {\n                name: newName,\n                number: newNumber\n            }\n            phonebookService\n                .create(personObject)\n                .then(returnedPerson => {\n                    setPeople(people.concat(returnedPerson))\n                    setSuccessMessage(\n                        `Added ${newName}`\n                    )\n                    setTimeout(() => {\n                        setSuccessMessage(null)\n                    }, 5000)\n                    setNewName('')\n                    setNewNumber('')\n                })\n                .catch(error => {\n                    setErrorMessage(\n                        error.response.data['error']['message']\n                    )\n                    setTimeout(() => {\n                        setErrorMessage(null)\n                    }, 5000)\n                })\n        }\n    }\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            <Notification message={successMessage} type={'success'} />\n            <Notification message={errorMessage} type={'error'} />\n            <Filter personFilter={personFilter} handleFilterChange={handleFilterChange} />\n            <h3>add a new</h3>\n            <PersonForm addPerson={addPerson} newName={newName} handleNameChange={handleNameChange} newNumber={newNumber} handleNumberChange={handleNumberChange} />\n            <h3>Numbers</h3>\n            <People setPeople={setPeople} people={people} personFilter={personFilter} />\n        </div>\n    )\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}